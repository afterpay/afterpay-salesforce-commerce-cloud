<div class="mb-sm-3">
    <a href="${URLUtils.https('Checkout-Login')}"
        class="btn btn-primary btn-block checkout-btn ${pdict.valid.error ? 'disabled' : ''}" role="button">
        ${Resource.msg('button.checkout', 'cart', null)}
    </a>
</div>

<iscomment>
isExpressCheckoutFinalize - has consumer already gone through Afterpay Express Checkout and now is back on merchant site to finalize
afterpayExpressPickupEnabled - Checks that cart only has items being picked up. If so, set pickup flag.
afterpayExpressCheckoutPdpEnabled - is Afterpay express checkout enabled on pdp in site preferences
afterpayExpressPickupEnabled - does the current cart and selected ship method indicate Afterpay Express Checkout should use in-store pickup mode
</iscomment>
<isscript>
    var BrandUtilities = require("*/cartridge/scripts/util/afterpayUtilities.js").brandUtilities;
    var countrycode = BrandUtilities.getCountryCode();
    var apBrand = BrandUtilities.getBrand();
    var sitePreferences = require("*/cartridge/scripts/util/afterpayUtilities.js").sitePreferencesUtilities;
    var afterpayEnabled = sitePreferences.isAfterpayEnabled();
    var afterpayExpressCheckoutEnabled = afterpayEnabled ? sitePreferences.isExpressCheckoutEnabled() : false;
    var isExpressCheckoutFinalize = require('*/cartridge/scripts/util/afterpaySession').isExpressCheckoutFinalizeFlow();
    var afterpayExpressCheckoutCartEnabled = sitePreferences.isExpressCheckoutCartEnabled();
    var AfterpayCOHelpers = require('*/cartridge/scripts/checkout/afterpayCheckoutHelpers');
    var afterpayExpressPickupEnabled = require('~/cartridge/scripts/checkout/afterpayRefArchCheckoutHelpers').shouldEnableExpressPickupMode();
    var afterpayExpressCheckoutBuyNowEnabled = sitePreferences.isExpressCheckoutBuyNowEnabled();
    var afterpayExpressCheckoutShippingStrategy = sitePreferences.getExpressCheckoutShippingStrategy() == 'integrated';
    var disableAfterpayPaymentMethod = ! AfterpayCOHelpers.isBasketAmountWithinThreshold();

    var checkoutButtonClass = 'afterpay-checkout-button';

    if (disableAfterpayPaymentMethod) {
        checkoutButtonClass += " afterpay-hide";
    }
   var buttonUrl = "https://static.afterpay.com/" + request.getLocale().replace('_', '-') + "/integration/button/checkout-with-"+ apBrand + "/white-on-black.svg";
</isscript>
<iscomment>Start of Afterpay</iscomment>
<isif condition="${afterpayExpressCheckoutEnabled}">
    <isset name="afterpayExpressCheckoutPage" value="cart" scope="page" />
    <isinclude template="product/components/afterpayexpresscheckout" />
    <div class="mb-sm-3">
        <isif condition="${isExpressCheckoutFinalize}">
            <a href="${URLUtils.url('AfterpayExpress-ContinueFinalize')}" class="${checkoutButtonClass} btn btn-block checkout-btn ${pdict.valid.error ? 'disabled' : ''}"
            style="background-image: url('${buttonUrl}');">
            &nbsp;
            </a>
        <iselseif condition="${afterpayExpressCheckoutCartEnabled}" />
            <a id="afterpay-express-button" class="${checkoutButtonClass} btn btn-block checkout-btn ${pdict.valid.error ? 'disabled' : ''}" 
            role="button" style="background-image: url('${buttonUrl}');">
            &nbsp;
            </a>
        </isif>
    </div>
</isif>
<iscomment>End of Afterpay</iscomment>
