<iscontent type="text/html" charset="UTF-8" compact="true"/>

<iscomment>
afterpayToken - token obtained from Afterpay during the initial checkout
afterpayExpressPickupEnabled - true when cart only has in-store pickup items and all are picked up from the same store
afterpayExpressCheckoutEnabled - true when Afterpay Express Checkout is enabled in site custom preferences
isExpressCheckoutFinalize - true if currently in Afterpay Express checkout flow where Afterpay Portal checkout has already
  been completed, and consumer has been returned to the merchant store to finalize order.
afterpayAmount - total amount for the Afterpay payment instrument in the cart. If no Afterpay payment instrument has
  been created in the cart, will return dw.value.Money() with 0 amount.

</iscomment>
<isscript>
var sitePreferences = require("*/cartridge/scripts/util/afterpayUtilities.js").sitePreferencesUtilities;
// session state specifically used for Afterpay Express
var AfterpaySession = require('*/cartridge/scripts/util/afterpaySession');
// This does a recalculation using the current basket
require('~/cartridge/scripts/checkout/afterpayRefArchCheckoutHelpers').calculateAndSetPaymentAmount(dw.order.BasketMgr.getCurrentBasket());
var afterpayAmount = require('*/cartridge/scripts/checkout/afterpayCheckoutHelpers').getCurrentAfterpayPaymentAmount(dw.order.BasketMgr.getCurrentBasket());
if (afterpayAmount.value == 0) {
  // If we've reached the checkout page and there's no existing Afterpay payment transaction in the basket, clear the
  // session since we're obviously not the normal express checkout flow
  AfterpaySession.clearSession(); // clear session. widget will not be displayed since checked flags will return false.
}
var afterpayToken = AfterpaySession.getToken();
var isExpressCheckoutFinalize = AfterpaySession.isExpressCheckoutFinalizeFlow();
var afterpayEnabled = sitePreferences.isAfterpayEnabled();
var afterpayExpressCheckoutEnabled = afterpayEnabled && sitePreferences.isExpressCheckoutEnabled();
var BrandUtilities = require("*/cartridge/scripts/util/afterpayUtilities.js").brandUtilities;
var countrycode = BrandUtilities.getCountryCode();
var buttonPlaceOrderClass = 'afterpay-placeorder-button';
if (countrycode === 'GB') {
    buttonPlaceOrderClass = 'clearpay-placeorder-button';
}
</isscript>
<isif condition="${afterpayExpressCheckoutEnabled && isExpressCheckoutFinalize}">
    <input id="afterpay-express-checkout-finalize" type="hidden" value="true" />
    <input id="afterpay-widget-amount" type="hidden" value="${afterpayAmount.value}" />
    <input id="afterpay-widget-locale" type="hidden" value="${request.getLocale()}" />
    <input id="afterpay-widget-currency" type="hidden" value="${afterpayAmount.currencyCode}" />
    <input id="afterpay-token" type="hidden" value="${afterpayToken}" />
    <input id="afterpay-express-url-cancelorder" type="hidden" value="${URLUtils.url('AfterpayExpress-CancelOrder')}" />
    <input id="afterpay-express-url-finalize" type="hidden" value="${URLUtils.url('AfterpayExpress-FinalizeOrder')}" />
    <input id="afterpay-express-url-cartstatus" type="hidden" value="${URLUtils.url('AfterpayExpress-CartStatus')}" />
    <input id="afterpay-express-url-shippingrequired" type="hidden" value="${URLUtils.url('AfterpayExpress-GetShippingRequired')}" />
    <input id="afterpay-express-url-widgeterror" type="hidden" value="${URLUtils.url('AfterpayExpress-WidgetError')}" />
<iselse/>
    <iscomment>For non-express-checkout Afterpay tab, show new widget. </iscomment>
    <input id="afterpay-express-checkout-finalize" type="hidden" value="false" />
    <input id="afterpay-widget-amount" type="hidden" value="${afterpayAmount.value}" />
    <input id="afterpay-widget-locale" type="hidden" value="${request.getLocale()}" />
    <input id="afterpay-widget-currency" type="hidden" value="${afterpayAmount.currencyCode}" />
    <input id="afterpay-token" type="hidden" value="" />
</isif>
<isset name="ecFinalize" value="${isExpressCheckoutFinalize}" scope="page" />
<script src="${URLUtils.staticURL('/js/afterpayWidget.js')}"></script>
