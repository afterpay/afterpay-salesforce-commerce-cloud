<iscontent type="text/html" charset="UTF-8" compact="true" />

<iscomment>
  afterpayToken - token obtained from Afterpay during the initial checkout
  afterpayExpressPickupEnabled - true when cart only has in-store pickup items and all are picked up from the same store
  afterpayExpressCheckoutEnabled - true when Afterpay Express Checkout is enabled in site custom preferences
  isExpressCheckoutFinalize - true if currently in Afterpay Express checkout flow where Afterpay Portal checkout has
  already
  been completed, and consumer has been returned to the merchant store to finalize order.
  afterpayAmount - total amount for the Afterpay payment instrument in the cart. If no Afterpay payment instrument has
  been created in the cart, will return dw.value.Money() with 0 amount.

</iscomment>
<isscript>
  var afterpayToken;
  var isCashApp = false;
  var sitePreferences = require("*/cartridge/scripts/util/afterpayUtilities").sitePreferencesUtilities;
  var afterpayEnable = sitePreferences.isAfterpayEnabled();
  var cashAppEnabled = sitePreferences.isCashAppEnabled();
  var isExpressCheckoutFinalize;
  var afterpayExpressCheckoutEnabled = afterpayEnable && sitePreferences.isExpressCheckoutEnabled();
  // session state specifically used for Afterpay Express
  var AfterpaySession = require('*/cartridge/scripts/util/afterpaySession');
  if (AfterpaySession.isValid()) {
      afterpayToken = AfterpaySession.getToken();
      isCashApp = AfterpaySession.getIsCashAppPay() && cashAppEnabled;
      isExpressCheckoutFinalize = AfterpaySession.isExpressCheckoutFinalizeFlow();
  }

  var BrandUtilities = require("*/cartridge/scripts/util/afterpayUtilities.js").brandUtilities;
  var expressCheckoutJS = BrandUtilities.getBrandSettings().javaScriptUrl;
  var afterpayAmount = require('*/cartridge/scripts/checkout/afterpayCheckoutHelpers').getCurrentAfterpayPaymentAmount(dw.order.BasketMgr.getCurrentBasket());
  if (afterpayAmount.value == 0 && !isCashApp) {
    // If we've reached the billing page and there's no existing Afterpay payment transaction in the basket, clear the
    // session since we're obviously not the normal express checkout flow
    AfterpaySession.clearSession(); // clear session. widget will not be displayed since checked flags will return false.
  }
  
</isscript>
<isif condition="${afterpayExpressCheckoutEnabled && isExpressCheckoutFinalize}">
  <input id="afterpay-widget-amount" type="hidden" value="${afterpayAmount.value}" />
  <input id="afterpay-widget-currency" type="hidden" value="${afterpayAmount.currencyCode}" />
  <input id="afterpay-widget-locale" type="hidden" value="${request.getLocale()}" />
  <input id="afterpay-token" type="hidden" value="${afterpayToken}" />
  <input id="afterpay-express-url-cartstatus" type="hidden" value="${URLUtils.url('AfterpayExpress-CartStatus')}" />
  <input id="afterpay-express-url-widgeterror" type="hidden" value="${URLUtils.url('AfterpayExpress-WidgetError')}" />
  <input id="afterpay-express-url-placeorder" type="hidden" value="${URLUtils.url('AfterpayExpress-FinalizeOrder')}" />
  <input id="afterpay-express-url-cancelorder" type="hidden" value="${URLUtils.url('AfterpayExpress-CancelOrder')}" />
  <isif condition="${expressCheckoutJS}">
      <script src="${expressCheckoutJS}"></script>
  </isif>
  <script src="${URLUtils.staticURL('/js/afterpayWidget.js')}"></script>
</isif>
