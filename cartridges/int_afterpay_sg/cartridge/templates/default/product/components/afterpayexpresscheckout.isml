<iscontent type="text/html" charset="UTF-8" compact="true"/>

<iscomment>
afterpayEnabled - is Afterpay enabled in site preferences
afterpayExpressCheckoutEnabled - is Afterpay express checkout enabled in site preferences
isExpressCheckoutFinalize - has consumer already gone through Afterpay Express Checkout and now is back on merchant site to finalize
afterpayExpressPickupEnabled - Checks that cart only has items being picked up. If so, set pickup flag.
afterpayExpressCheckoutPdpEnabled - is Afterpay express checkout enabled on pdp in site preferences
afterpayExpressPickupEnabled - does the current cart and selected ship method indicate Afterpay Express Checkout should use in-store pickup mode
</iscomment>
<isscript>
    var AfterpayUtilities = require("*/cartridge/scripts/util/afterpayUtilities.js");
    var sitePreferences = AfterpayUtilities.sitePreferencesUtilities;
    var afterpayEnabled = sitePreferences.isAfterpayEnabled();
    var afterpayExpressCheckoutEnabled = afterpayEnabled ? sitePreferences.isExpressCheckoutEnabled() : false;
    var isExpressCheckoutFinalize = require('*/cartridge/scripts/util/afterpaySession').isExpressCheckoutFinalizeFlow();
    var afterpayExpressCheckoutPdpEnabled = sitePreferences.isExpressCheckoutPdpEnabled();
    var afterpayExpressCheckoutBuyNowEnabled = sitePreferences.isExpressCheckoutBuyNowEnabled();
    var afterpayExpressCheckoutShippingStrategy = sitePreferences.getExpressCheckoutShippingStrategy() == 'integrated';
    var AfterpayCOHelpers = require('*/cartridge/scripts/checkout/afterpayCheckoutHelpers');
    var afterpayExpressPickupEnabled = afterpayExpressCheckoutEnabled ? require('~/cartridge/scripts/checkout/afterpaySGCheckoutHelpers').shouldEnableExpressPickupMode() : false;
    var disableAfterpayPaymentMethod = ! AfterpayCOHelpers.isPDPBasketAmountWithinThreshold();
    if (pdict.pagetype === 'product_detail' && afterpayExpressCheckoutPdpEnabled) {
        disableAfterpayPaymentMethod = disableAfterpayPaymentMethod || ! AfterpayCOHelpers.isPriceWithinThreshold(SalesPrice ? SalesPrice : StandardPrice);
    }
    var BrandUtilities = require("*/cartridge/scripts/util/afterpayUtilities.js").brandUtilities;
    var countrycode = BrandUtilities.getCountryCode();
</isscript>
<isif condition="${pdict.pagetype == 'product_detail'}">
    <isscript>
        disableAfterpayPaymentMethod =  disableAfterpayPaymentMethod || AfterpayCOHelpers.checkRestrictedProducts(pdict.Product.ID);
    </isscript>
<iselse/>
    <isscript>
        disableAfterpayPaymentMethod =  disableAfterpayPaymentMethod || !AfterpayCOHelpers.getCartData().apCartEligible;
    </isscript>
</isif>
<isif condition="${afterpayExpressCheckoutEnabled && !disableAfterpayPaymentMethod && (pdict.pagetype != 'product_detail' || afterpayExpressCheckoutPdpEnabled)}">
    <input id="afterpay-express-countrycode" type="hidden" value="${countrycode}" />
    <input id="afterpay-express-storepickup" type="hidden" value="${afterpayExpressPickupEnabled}" />
    <input id="afterpay-express-buynow" type="hidden" value="${afterpayExpressCheckoutBuyNowEnabled}" />
    <input id="afterpay-express-shipping-option-required" type="hidden" value="${afterpayExpressCheckoutShippingStrategy}" />
    <input id="afterpay-express-url-createtoken" type="hidden" value="${URLUtils.url('AfterpayExpress-CreateToken')}" />
    <input id="afterpay-express-url-getshippingmethods" type="hidden" value="${URLUtils.url('AfterpayExpress-GetShippingMethods')}" />
    <input id="afterpay-express-url-processorder" type="hidden" value="${URLUtils.url('AfterpayExpress-PostAfterpayCheckoutFlow')}" />
    <input id="afterpay-express-url-cancelorder" type="hidden" value="${URLUtils.url('AfterpayExpress-CancelOrder')}" />
    <input id="afterpay-express-url-cartstatus" type="hidden" value="${URLUtils.url('AfterpayExpress-CartStatus')}" />
    <input id="afterpayurl-continuefinalize" type="hidden" value="${URLUtils.url('AfterpayExpress-ContinueFinalize')}" />
    <script src="${URLUtils.staticURL('/lib/jquery/jquery.min.js')}"></script>
    <script src="${URLUtils.staticURL('/lib/jquery/ui/jquery-ui.min.js')}"></script>
    <isinclude url="${URLUtils.url('Afterpay-IncludeAfterpayLibrary')}" />
    <script src="${URLUtils.staticURL('/js/afterpayExpress.js')}"></script>
</isif>
